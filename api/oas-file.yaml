openapi: 3.0.3
info:
  title: fdi-api-public
  version: 1.0.0
paths:
  '/v1/ping':
    get:
      summary: Endpoint para probar el funcionamiento del API
      description: 
        Devuelve un HTTP 200 en caso que el API esté activo y
        funcionando correctamente.
      operationId: ping
      x-router-controller: ApiController
      responses:
        '200':
          description: 'Ping exitoso'
  '/v1/chat':
    post:
      summary: Endpoint para enviar prompts al modelo Gemini de Google
      description:
        Envía un prompt de texto al modelo de IA Generativa de Google
        Gemini para obtener una respuesta
      operationId: chat
      x-router-controller: ApiController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Objeto con el prompt a utilizar
              required:
                - prompt
              properties:
                prompt:
                  type: string
                  description: Prompt a enviar al modelo
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                type: object
                description:
                  Objeto con la respuesta generada por el modelo
                properties:
                  status:
                    type: number
                    description: Código de estado del modelo
                  text:
                    type: string
                    description: Respuesta generada por el modelo
                  error:
                    type: string
                    description: Error encontrado por el modelo, en caso que ocurra alguno
        '400':
          description: 'Solicitud errónea'
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-400-response:
                  value: "El campo PROMPT es requerido"
        '500':
          description: 'Error interno del servidor'
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-500-response:
                  value: "Intenta de nuevo más tarde"       
  '/v1/escuela/asignacion':
    get:
      summary: Obtiene un listado de asignaciones de materias a profesores
      description:
        Obtiene un arreglo de todas las asignaciones de materias a profesores
        registradas en el sistema escolar usado durante el curso.
      operationId: listAsignacion
      x-router-controller: EscuelaController
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                type: array
                description:
                  Arreglo con las asignaciones retornadas
                items:
                  $ref: '#/components/schemas/Asignacion'
        '500':
          description: Error del servidor
    post:
      summary: Registra una asignación de materia a un profesor en el sistema escolar
      description:
        Registra una asignación de materia a persona en el sistema escolar usado
        durante el curso. Retorna el ID de la asignación recién creada.
      operationId: createAsignacion
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la asignación a guardar
              $ref: '#/components/schemas/Asignacion'
      responses:
        '200':
          description: Asignación creada correctamente
          content:
            application/json:
              schema:
                type: number
                description: ID de la asignación recién creada
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
  '/v1/escuela/asistencia':
    get:
      summary: Obtiene un listado de asistencias de alumnos a materias
      description:
        Obtiene un arreglo de todas las asistencias de alumnos a materias
        registradas en el sistema escolar usado durante el curso.
      operationId: listAsistencia
      x-router-controller: EscuelaController
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                type: array
                description:
                  Arreglo con las asistencias retornadas
                items:
                  $ref: '#/components/schemas/Asistencia'
        '500':
          description: Error del servidor
    post:
      summary: Registra una asistencia de un alumno a una materia
      description:
        Registra una asistencia de un alumno a una materia en el sistema escolar
        usado durante el curso. Retorna el ID de la asistencia recién creada.
      operationId: createAsistencia
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la asistencia a guardar
              $ref: '#/components/schemas/Asistencia'
      responses:
        '200':
          description: Asistencia creada correctamente
          content:
            application/json:
              schema:
                type: number
                description: ID de la asistencia recién creada
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
  '/v1/escuela/inscripcion':
    get:
      summary: Obtiene un listado de inscripciones de alumnos a materias
      description:
        Obtiene un arreglo de todas las inscripciones de alumnos a materias
        registradas en el sistema escolar usado durante el curso.
      operationId: listInscripcion
      x-router-controller: EscuelaController
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                type: array
                description:
                  Arreglo con las inscripciones retornadas
                items:
                  $ref: '#/components/schemas/Inscripcion'
        '500':
          description: Error del servidor
    post:
      summary: Registra una inscripción de un alumno a una materia
      description:
        Registra una inscripción de un alumno a una materia en el sistema escolar
        usado durante el curso. Retorna el ID de la inscripción recién creada.
      operationId: createInscripcion
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la inscripción a guardar
              $ref: '#/components/schemas/Inscripcion'
      responses:
        '200':
          description: Inscripción creada correctamente
          content:
            application/json:
              schema:
                type: number
                description: ID de la inscripción recién creada
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
  '/v1/escuela/persona':
    get:
      summary: Obtiene un listado de personas registradas en el sistema escolar
      description:
        Obtiene un arreglo de todas las personas registradas en el sistema
        escolar usado durante el curso.
      operationId: listPersonaEscuela
      x-router-controller: EscuelaController
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                type: array
                description:
                  Arreglo con las personas retornadas
                items:
                  $ref: '#/components/schemas/PersonaEscuela'
        '500':
          description: Error del servidor
    post:
      summary: Registra una persona en el sistema escolar
      description:
        Registra una persona en el sistema escolar usado durante el curso.
        Retorna el ID de la persona recién creada.
      operationId: createPersona
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la persona a guardar
              $ref: '#/components/schemas/PersonaEscuela'
      responses:
        '200':
          description: Persona creada correctamente
          content:
            application/json:
              schema:
                type: number
                description: ID de la persona recién creada
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
    delete: 
      summary: Elimina una persona del sistema escolar
      description:
        Elimina la persona cuyo ID se proporciona del sistema escolar usado
        durante el curso.
      operationId: deletePersona
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la persona a eliminar
              $ref: '#/components/schemas/PersonaEscuelaOpcional'
      responses:
        '200':
          description: Persona eliminada correctamente
          content:
            application/json:
              schema:
                type: number
                description: Número de filas eliminadas
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
    patch:
      summary: Modifica los datos de una persona en el sistema escolar
      description:
        Modifica los datos de la persona en el sistema escolar usado durante el
        curso cuyo ID se proporciona.
      operationId: updatePersona
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la persona a actualizar
              $ref: '#/components/schemas/PersonaEscuelaOpcional'
      responses:
        '200':
          description: Persona actualizada correctamente
          content:
            application/json:
              schema:
                type: number
                description: Número de filas modificadas
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
  '/v1/escuela/persona/{id}':
    get:
      summary: Obtiene los datos de una persona en el sistema escolar
      description:
        Obtiene la información de la persona cuyo ID se proporciona
      operationId: fetchPersona
      x-router-controller: EscuelaController
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonaEscuelaFull'
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
  '/v1/escuela/materia':
    get:
      summary: Obtiene un listado de materias registradas en el sistema escolar
      description:
        Obtiene un arreglo de todas las materias registradas en el sistema
        escolar usado durante el curso.
      operationId: listMateria
      x-router-controller: EscuelaController
      responses:
        '200':
          description: Solicitud exitosa
          content:
            application/json:
              schema:
                type: array
                description:
                  Arreglo con las materias retornadas
                items:
                  $ref: '#/components/schemas/Materia'
        '500':
          description: Error del servidor
    post:
      summary: Registra una materia en el sistema escolar
      description:
        Registra una materia en el sistema escolar usado durante el curso.
        Retorna el ID de la materia recién creada.
      operationId: createMateria
      x-router-controller: EscuelaController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos de la materia a guardar
              $ref: '#/components/schemas/Materia'
      responses:
        '200':
          description: Materia creada correctamente
          content:
            application/json:
              schema:
                type: number
                description: ID de la materia recién creada
        '400':
          description: Solicitud errónea
        '500':
          description: Error del servidor
  #'/v1/persona':
  #  get:
  #    summary: Endpoint para obtener un listado de personas
  #    description: 
  #      Obtiene un arreglo de todas las personas guardadas en la base de
  #      datos
  #    operationId: list
  #    x-router-controller: PersonaController
  #    responses:
  #      '200':
  #        description: Solicitud exitosa
  #        content:
  #          application/json:
  #           schema:
  #              type: array
  #              description:
  #                Arreglo con las personas retornadas
  #              items:
  #                $ref: '#/components/schemas/Persona'
  #      '500':
  #        description: Error del servidor          
  #  patch:
  #    summary: Endpoint para actualizar los datos de nueva persona
  #    description:
  #      Cambia la información de la persona cuyo ID se proporciona. Retorna
  #      el número de registros afectados por la consulta.
  #    operationId: update
  #    x-router-controller: PersonaController
  #    requestBody:
  #      content:
  #        application/json:
  #          schema:
  #            type: object
  #            description: Datos de la persona a guardar
  #            $ref: '#/components/schemas/Persona'
  #    responses:
  #      '200':
  #        description: Persona creada correctamente
  #        content:
  #          application/json:
  #            schema:
  #              type: number
  #              description: ID de la persona recién creada
  #      '400':
  #        description: Solicitud errónea
  #      '500':
  #        description: Error del servidor
  #  post:
  #    summary: Endpoint para guardar una nueva persona
  #    description:
  #      Guarda el registro de una nueva persona en la base de datos. Regresa
  #      el ID de la nueva persona.
  #    operationId: create
  #    x-router-controller: PersonaController
  #    requestBody:
  #      content:
  #        application/json:
  #          schema:
  #            type: object
  #            description: Datos de la persona a guardar
  #            $ref: '#/components/schemas/Persona'
  #    responses:
  #      '200':
  #        description: Persona creada correctamente
  #        content:
  #          application/json:
  #            schema:
  #              type: number
  #              description: ID de la persona recién creada
  #      '500':
  #       description: Error del servidor
  #'/v1/persona/{id}':
  #  get:
  #    summary: Endpoint para obtener la información de una persona
  #    description: Obtiene la información de la Persona cuyo ID se proporciona
  #    operationId: fetch
  #    x-router-controller: PersonaController
  #    parameters:
  #      - name: id
  #        in: path
  #        required: true
  #        schema:
  #          type: integer
  #    responses:
  #      '200':
  #        description: Solicitud exitosa
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/Persona'
  #      '400':
  #        description: Solicitud errónea
  #      '500':
  #        description: Error del servidor
  #  delete:
  #    summary: Endpoint para eliminar el registro de una persona
  #    description: Elimina la información de la Persona cuyo ID se proporciona.
  #    operationId: del
  #    x-router-controller: PersonaController
  #    parameters:
  #      - name: id
  #        in: path
  #        required: true
  #        schema:
  #          type: integer
  #    responses:
  #      '200':
  #        description: Solicitud exitosa
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/Persona'
  #      '400':
  #        description: Solicitud errónea
  #      '500':
  #        description: Error del servidor
  '/v1/web-design/final-test':
    get:
      summary: Endpoint para el ejercicio del examen final
      description:
        Devuelve un mensaje erróneo, pues no se utilizó el método HTTP correcto
        para hacer la solicitud al servidor
      operationId: finalTestGet
      x-router-controller: WebDesignController
      responses:
        '405':
          description: 'Método Equivocado'
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-400-response:
                  value: "Tienes que hacer la solicitud por POST!"
    post:
      summary: Endpoint para el ejercicio del examen final
      description: 
        Devuelve un documento JSON con información necesaria para completar
        el ejercicio práctico del examen ordinario.
      operationId: finalTest
      x-router-controller: WebDesignController
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Datos solicitados por el ejercicio
              required:
                - nombre
                - apellido
                - matricula
              properties:
                nombre:
                  type: string
                  description: Nombre del alumno
                  maxLength: 128
                apellido:
                  type: string
                  description: Apellido del alumno
                  maxLength: 128
                matricula:
                  type: number
                  description: Matrícula del alumno
                  minimum: 1
      responses:
        '200':
          description: 'Solicitud exitosa'
          content:
            application/json:
              schema:
                type: object
               properties:
                  code:
                    type: number
                    description: Código de la operación
                  status:
                    type: string
                    description: Resultado de la operación
                  message:
                    type: string
                    description: Mensaje supersecreto
        '400':
          description: 'Solicitud errónea'
          content:
            text/plain:
              schema:
                type: string
              examples:
               example-400-response:
                  value: "El campo NOMBRE es requerido"
        '500':
          description: 'Error interno del servidor'
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-400-response:
                  value: "Intenta de nuevo más tarde"
components:
  schemas:
    Asignacion:
      type: object
      required:
        - id_materia
        - id_profesor
        - periodo
      properties:
        id:
          type: number
          description: ID de la asignación
        id_materia:
          type: number
          description: ID de la materia asignada
        id_profesor:
          type: number
          description: ID del profesor asignado
        periodo:
          type: string
          description: Clave del semestre en el que se imparte la materia
          maxLength: 20
    Asistencia:
      type: object
      required:
        - id_inscripcion
        - fecha
      properties:
        id:
          type: number
          description: ID de la asistencia
        id_inscripcion:
          type: number
          description: ID de la inscripción del estudiante
        id_estudiante:
          type: number
          description: ID del estudiante que asistió
        id_materia:
          type: number
          description: ID de la materia a la que asistió
        estudiante:
          type: string
          description: Nombre completo del estudiante
        materia:
          type: string
          description: Nombre de la materia a la que asistió
        fecha:
          type: string
          format: date
          description: Fecha de la asistencia
    Inscripcion:
      type: object
      required:
        - id_estudiante
        - id_materia
        - calificacion
      properties:
        id:
          type: number
          description: ID de la inscripción
        id_estudiante:
          type: number
          description: ID del estudiante inscrito
        id_materia:
          type: number
          description: ID de la materia inscrita
        calificacion:
          type: number
          description: Calificación obtenida por el estudiante (base 10)
          minimum: 0
          maximum: 10
    Materia:
      type: object
      required:
        - descripcion
        - semestre
      properties:
        id:
          type: number
          description: ID de la materia
        descripcion:
          type: string
          description: Nombre de la materia
          maxLength: 128
        semestre:
          type: number
          description: Semestre en el que se imparte la materia
          minimum: 1
          maximum: 12
        creditos:
          type: number
          description: Créditos de la materia
          minimum: 1
          maximum: 10
    #Persona:
    #  type: object
    #  required:
    #    - nombre
    #    - apellidoPaterno
    #    - apellidoMaterno
    #    - sexo
    #    - estado
    #  properties:
    #    nombre:
    #      type: string
    #      description: Nombre de pila de la persona
    #      maxLength: 128
    #    apellidoPaterno:
    #      type: string
    #      description: Primer apellido de la persona
    #      maxLength: 128
    #    apellidoMaterno:
    #      type: string
    #      description: Segundo apellido de la persona
    #      maxLength: 128
    #    estado:
    #      type: number
    #      minimum: 1
    #      maximum: 32
    #     description: Código del estado de nacimiento de la persona
    #    nombreEstado:
    #      type: string
    #      maxLength: 64
    #      description: Nombre del estado de nacimiento de la persona. (Opcional)
    #    sexo:
    #      type: string
    #      enum: ['h', 'm', 'o']
    #      description: >
    #        Código del sexo de la persona
    #          h: Hombre
    #          m: Mujer
    #          o: Otro
    #    sexo_otro:
    #      type: string
    #      maxLength: 64
    #      description: 
    #        Sexo opcional de la persona, en caso que quiera especificarlo. (Opcional)
    PersonaEscuela:
      type: object
      required:
        - nombre
        - apellido
        - sexo
        - fh_nac
        - id_rol
      properties:
        id_persona:
          type: number
          description: ID de la persona
        nombre:
          type: string
          description: Nombre de la persona
          maxLength: 64
        apellido:
          type: string
          description: Apellido de la persona
          maxLength: 64
        sexo:
          type: string
          enum: ['h', 'm', 'o']
          description: >
            Código del sexo de la persona
              h: Hombre
              m: Mujer
              o: Otro
          maxLength: 1
        fh_nac:
          type: string
          format: date
          description: Fecha de nacimiento de la persona
        id_rol:
          type: number
          enum: [1, 2, 3, 4]
          description: >
            Código del rol de la persona
              1: Alumno
              2: Profesor
              3: Administrativo
              4: Otro
    PersonaEscuelaFull:
      type: object
      required:
        - id_persona
        - nombre
        - apellido
        - sexo
        - fh_nac
        - id_rol
        - rol
      properties:
        id_persona:
          type: number
          description: ID de la persona
        nombre:
          type: string
          description: Nombre de la persona
          maxLength: 64
        apellido:
          type: string
          description: Apellido de la persona
          maxLength: 64
        sexo:
          type: string
          enum: ['h', 'm', 'o']
          description: >
            Código del sexo de la persona
              h: Hombre
              m: Mujer
              o: Otro
          maxLength: 1
        fh_nac:
          type: string
          format: date
          description: Fecha de nacimiento de la persona
        id_rol:
          type: number
          enum: [1, 2, 3, 4]
          description: >
            Código del rol de la persona
              1: Alumno
              2: Profesor
              3: Administrativo
              4: Otro
        rol:
          type: string
          description: Rol de la persona dentro del sistema
    PersonaEscuelaOpcional:
      type: object
      required:
        - id_persona
      properties:
        id_persona:
          type: number
          description: ID de la persona
        nombre:
          type: string
          description: Nombre de la persona
          maxLength: 64
        apellido:
          type: string
          description: Apellido de la persona
          maxLength: 64
        sexo:
          type: string
          enum: ['h', 'm', 'o']
          description: >
            Código del sexo de la persona
              h: Hombre
              m: Mujer
              o: Otro
          maxLength: 1
        fh_nac:
          type: string
          format: date
          description: Fecha de nacimiento de la persona
        id_rol:
          type: number
          enum: [1, 2, 3, 4]
          description: >
            Código del rol de la persona
              1: Alumno
              2: Profesor
              3: Administrativo
              4: Otro

#  securitySchemes:
#    ApiKeyAuth:
#      type: apiKey
#      in: header
#      name: X-API-Key
#security:
#  - ApiKeyAuth: []